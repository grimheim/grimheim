sudo: true

language: rust
cache: cargo
dist: trusty
os:
  - linux
  - osx

# Run builds for all the supported trains
rust:
  - nightly
# - beta
# - stable
# - 1.0.0

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      - xvfb
      - libczmq-dev

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update
      brew install zmq
    fi

# Add clippy
before_script:
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
        ( ( cargo install clippy && export CLIPPY=true ) \
        || export CLIPPY=false );
      fi
  - export PATH=$PATH:~/.cargo/bin
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export DISPLAY=:99.0
      sh -e /etc/init.d/xvfb start
      sleep 3
    fi

# The main build
script:
  - cargo build
  - cargo test --lib
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      cargo test --bins
    fi

after_success:
# Upload docs
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && \
            "$TRAVIS_PULL_REQUEST" = "false" && \
            "$TRAVIS_BRANCH" == "master" ]]; then
        cargo doc &&
        echo "<meta http-equiv=refresh content=0;url=grimheim/index.html>" \
            > target/doc/index.html &&
        git clone https://github.com/davisp/ghp-import.git &&
        ./ghp-import/ghp_import.py -n -p -f -m "Documentation upload" \
          -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" \
          target/doc &&
        echo "Uploaded documentation"
      fi
# Coverage report
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        for file in target/debug/grimheim-*[^\.d]; do\
          mkdir -p "target/cov/$(basename $file)";\
          kcov --exclude-pattern=/.cargo,/usr/lib \
            --verify "target/cov/$(basename $file)" "$file";\
        done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
      fi
